#!/bin/bash

dir="{{pkg.svc_files_path}}"
ca="${dir}/ca.pem"
key="${dir}/ca-key.pem"

cd {{pkg.svc_data_path}}

cert_upload() {
  for cert in $*; do
    hab-butterfly file upload ${group} ${version} ${cert}
  done
}

{{~#if svc.me.follower}}
  if [ ! -f "${ca}" ]; then
    sleep 1
    exit 1
  fi
{{~else}}
  group="{{pkg.name}}.$(awk '/group/ { print $3 }' /hab/sup/default/specs/{{pkg.name}}.spec)"
  group=${group//\"/}
  version=$(date +%s)

  echo "Checking Certificate Authority validity."
  if [ -f "${ca}" ]; then
    certinfo=$(cfssl certinfo -cert ${ca})
    cert_exp=$(echo ${certinfo} | jq .not_after)
    cert_exp="${cert_exp/T/ }"
    cert_exp="${cert_exp//[Z\"]/}"
    calc_exp=$(date +%s -d "${cert_exp}")
    renew=$(( $(date +%s)+30*60*60*24 ))
    if [[ $cert_exp < $renew ]]; then
      echo "Renewing current Certificate Authority."
      cfssl gencert -renewca -ca "${ca}" -ca-key "${key}" -config "{{pkg.path}}/csr/config.json" | cfssljson -bare ca
      cert_upload ca.pem ca-key.pem ca.csr
      rm ca.pem ca-key.pem ca.csr
      sleep 10
    else
      echo "Certificate Authority Valid."
    fi
  else
    echo "Generating new Certificate Authority."
    cfssl gencert -initca "{{pkg.path}}/csr/ca-csr.json" -config "{{pkg.path}}/csr/config.json" | cfssljson -bare ca
    cert_upload ca.pem ca-key.pem ca.csr
    rm ca.pem ca-key.pem ca.csr
    sleep 10
  fi
{{/if ~}}
